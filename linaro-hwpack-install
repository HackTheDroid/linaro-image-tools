#!/bin/sh

# XXX: Talk to James about files in sources.list.d having to end in .list and
# about implausibly old time stamps (1969-12-31) in sample tarballs.

#set -x
LOCKFILE="/var/lock/hwpack"
TEMP_DIR="/var/tmp/hwpack"
HWPACK_DIR="/var/tmp/hwpack/unpacked"
HWPACK_TARBALL="${TEMP_DIR}/hwpack.tgz"
HWPACK_PKGS_SOURCE=/etc/apt/sources.list.d/hwpack-pkgs.list
OTHER_INSTANCE_RUNNING=0

clean_apt_sources() {
  sudo rm -f $HWPACK_PKGS_SOURCE
  sudo rm -f /etc/apt/sources.list.d/hwpack.*
}

# This creates all the directories we need.
mkdir -p $HWPACK_DIR

(
# Try to acquire fd #9 (i.e. /var/lock/hwpack) for 5 seconds.
flock -w5 9
if [ $? -ne 0 ]; then
  OTHER_INSTANCE_RUNNING=1
  echo "Could not acquire lock: $LOCKFILE"
  exit 1
fi

# Download and unpack the hwpack tarball.
# XXX: Can we assume wget is available?
echo -n "Downloading hardware pack from $1..."
wget -q -O $HWPACK_TARBALL $1
echo "Done"
echo -n "Unpacking hardware pack ..."
tar zxf $HWPACK_TARBALL -C $HWPACK_DIR
echo "Done"

# Check the architecture of the hwpack matches that of the host system.
HWPACK_ARCH=`grep ARCHITECTURE ${HWPACK_DIR}/metadata | cut -d "=" -f2`
dpkg-architecture -e${HWPACK_ARCH}
if [ $? -ne 0 ]; then
  echo "Hardware pack architecture ($HWPACK_ARCH) does not match the"\
        "host's architecture"
  exit 1
fi

CWD=`pwd`

# Install the apt sources that contain the packages we need.
cd ${HWPACK_DIR}/sources.list.d/
for file in *; do
  sudo cp $file /etc/apt/sources.list.d/hwpack.$file
  # TODO:
  #  * Skip any files that contain lines that are already present in the apt
  #  configuration outside of the "hwpack." prefixed files.
  #  * If there is an existing "/var/lib/hwpack/sources" it compares the list
  #  of filenames it just created with those listed in that file, and removes
  #  any in the file that it didn't just write itself.
  #  * It stores the names of the files it created in
  #  "/var/lib/hwpack/sources", overwriting anything already there.
done

# Import the OpenPGP keys for the files installed above.
for file in `ls ${HWPACK_DIR}/sources.list.d.gpg/`; do
  sudo apt-key add $file
done

# Add one extra apt source for the packages included in the hwpack.
sudo sh -c "echo deb file:${HWPACK_DIR} pkgs/ > $HWPACK_PKGS_SOURCE"

cd $CWD

sudo apt-get update -qq

echo -n "Installing packages ..."
# TODO:
#   * run apt-get install to install the packages listed in the manifest
#     * builds one long command line
#     * iterate over packages in manifest
#       * if package has version and --install-latest is not specified then add PACKAGE=VERSION to command line
#       * else add PACKAGE to the command line
#     * If there is an existing "/var/lib/hwpack/packages" it compares the list of packages it just installed with those listed in that file, and removes any in the file that it didn't just install itself.
#       * TODO: how to safely remove the packages?
#     * It then writes the list of packages that it installed to "/var/lib/hwpack/packages", overwriting any that were there already.
echo "Done"

clean_apt_sources
sudo apt-get update -qq
sudo apt-get clean -qq

# Using 9 as the file descriptor because of https://launchpad.net/bugs/249620
) 9>$LOCKFILE

# Ensure our temp dir and apt sources are removed, unless they belong to 
# another running instance.
if [ $OTHER_INSTANCE_RUNNING -eq 0 ]; then
  rm -rf $TEMP_DIR
  clean_apt_sources
fi

#   * finally remove all apt caches etc. if the --release parameter is specified
#     * What in particular should be removed?
